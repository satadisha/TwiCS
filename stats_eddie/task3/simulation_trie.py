
#import SatadishaModule as phase1
import SatadishaModule_final_trie as phase1
import phase2_Trie as phase2
import datetime
from threading import Thread
import random
import math
from queue  import Queue
import pandas as pd 
import warnings
import numpy as np
import time
import trie as trie
import pickle
import matplotlib.pyplot as plt
import copy
import matplotlib.ticker as ticker
import SVM as svm
import matplotlib
from matplotlib import rc
import matplotlib.font_manager as fm
warnings.filterwarnings("ignore")

thread_processed=0
stream_count=0
queue = Queue(1000)
#time_in=datetime.datetime.now()
#time_out=datetime.datetime.now()
# fieldnames=['candidate','freq','length','cap','start_of_sen','abbrv','all_cap','is_csl','title','has_no','date','is_apostrp','has_inter_punct','ends_verb','ends_adverb','change_in_cap','topic_ind','entry_time','entry_batch','@mention']

# global total_time
# total_time=0
# Phase1= phase1.SatadishaModule()
# Phase2 = phase2.EntityResolver()
# tweets=pd.read_csv("tweets_1million_for_others.csv",sep =',')
# print('Tweets are in memory...')
# # tweets=tweets[:100:]
# batch_size=615
# length=len(tweets)
# val=math.ceil(length/batch_size)-1



# # define ready thresholds based on batch size .

# ready_thresholds=range(val)



# execution_time_list=[]
# accuracy_list=[]
# batch_size_recorder=[]

# whole_level=[]



# Phase1= phase1.SatadishaModule()
# Phase2 = phase2.EntityResolver()


# tuple_of= Phase1.extract(tweets,0)
ax = plt.subplot(111)

# gap_dict=tuple_of[5]
# gap_dict={0: 759, 1: 383, 2: 215, 3: 128, 4: 82, 5: 55, 6: 31, 7: 26, 8: 17, 9: 11, 10: 3, 11: 3, 12: 2, 13: 4, 15: 2, 17: 1, 20: 1, 21: 1}
# gap_dict={0: 460146, 1: 211769, 2: 89768, 3: 41207, 4: 21465, 5: 10368, 6: 6336, 7: 3640, 8: 2378, 9: 1440, 10: 1068, 11: 694, 12: 483, 13: 336, 14: 237, 15: 155, 16: 153, 17: 128, 18: 94, 19: 81, 20: 123, 21: 71, 22: 89, 23: 40, 24: 44, 25: 43, 26: 25, 27: 15, 28: 19, 29: 19, 30: 23, 31: 19, 32: 6, 33: 13, 34: 8, 35: 3, 36: 11, 37: 5, 38: 7, 39: 7, 40: 4, 41: 6, 42: 4, 43: 3, 44: 4, 45: 3, 46: 2, 47: 2, 48: 2, 49: 2, 50: 1, 51: 3, 52: 1, 54: 3, 56: 1, 57: 1, 59: 3, 60: 1, 63: 3, 65: 4, 67: 2, 68: 1, 69: 1, 70: 2, 71: 1, 72: 3, 73: 1, 74: 3, 75: 2, 77: 2, 78: 3, 79: 3, 80: 2, 83: 1, 84: 4, 85: 2, 86: 1, 88: 1, 89: 1, 90: 1, 91: 3, 92: 1, 95: 1, 96: 1, 100: 1, 101: 2, 103: 1, 105: 3, 108: 1, 112: 1, 113: 1, 258: 1, 117: 1, 124: 2, 127: 1, 129: 1, 131: 1, 137: 1, 142: 1, 143: 1, 145: 1, 154: 1, 158: 1, 166: 1, 170: 1, 173: 1, 201: 1, 205: 1, 208: 1, 213: 1, 222: 1, 223: 1, 224: 1, 227: 2, 233: 1, 246: 1}
# gap_dict={0: 0.5528465762065773, 1: 0.2399645485078381, 2: 0.09998767789334934, 3: 0.05095812857722626, 4: 0.025792769297379912, 5: 0.012751684680682215, 6: 0.0069116844093697755, 7: 0.003772373384701822, 8: 0.0025141619441345076, 9: 0.001380302038573846, 10: 0.0009722029100520128, 11: 0.0005527990965295748, 12: 0.00040470772302165185, 13: 0.00024192025901294273, 14: 0.00015939605850852768, 15: 0.00011417731850610849, 16: 0.0001017421650054432, 17: 7.91327950042336e-05, 18: 6.21757675033264e-05, 19: 4.069686600217728e-05, 20: 6.782811000362881e-05, 21: 4.069686600217728e-05, 22: 4.182733450223776e-05, 23: 2.2609370001209602e-05, 24: 2.2609370001209602e-05, 25: 2.147890150114912e-05, 26: 1.582655900084672e-05, 27: 1.017421650054432e-05, 28: 1.1304685000604801e-05, 29: 1.3565622000725761e-05, 30: 1.017421650054432e-05, 31: 1.1304685000604801e-05, 32: 6.7828110003628805e-06, 33: 7.91327950042336e-06, 34: 5.652342500302401e-06, 35: 2.2609370001209603e-06, 36: 6.7828110003628805e-06, 37: 3.3914055001814403e-06, 38: 4.521874000241921e-06, 39: 4.521874000241921e-06, 40: 3.3914055001814403e-06, 41: 4.521874000241921e-06, 42: 2.2609370001209603e-06, 43: 2.2609370001209603e-06, 44: 2.2609370001209603e-06, 45: 2.2609370001209603e-06, 46: 1.1304685000604802e-06, 47: 2.2609370001209603e-06, 48: 3.3914055001814403e-06, 49: 1.1304685000604802e-06, 50: 1.1304685000604802e-06, 51: 2.2609370001209603e-06, 52: 2.2609370001209603e-06, 53: 1.1304685000604802e-06, 54: 2.2609370001209603e-06, 55: 0.0, 56: 1.1304685000604802e-06, 57: 0.0, 58: 1.1304685000604802e-06, 59: 1.1304685000604802e-06, 60: 0.0, 61: 1.1304685000604802e-06, 62: 0.0, 63: 1.1304685000604802e-06, 64: 1.1304685000604802e-06, 65: 1.1304685000604802e-06, 66: 1.1304685000604802e-06, 67: 1.1304685000604802e-06, 68: 0.0, 69: 2.2609370001209603e-06, 70: 0.0, 71: 0.0, 72: 1.1304685000604802e-06, 73: 0.0, 74: 2.2609370001209603e-06, 75: 1.1304685000604802e-06, 77: 1.1304685000604802e-06, 78: 1.1304685000604802e-06, 79: 1.1304685000604802e-06, 80: 1.1304685000604802e-06, 83: 0.0, 84: 1.1304685000604802e-06, 85: 0.0, 86: 0.0, 87: 0.0, 88: 1.1304685000604802e-06, 89: 0.0, 90: 0.0, 91: 1.1304685000604802e-06, 92: 0.0, 93: 1.1304685000604802e-06}
gap_dict={0: 0.5526509135902821, 1: 0.24007743596367245, 2: 0.10005930235073097, 3: 0.050899866391797034, 4: 0.025772485160149166, 5: 0.012743259604281883, 6: 0.006921813814821709, 7: 0.003782260831823902, 8: 0.0025179944171375454, 9: 0.0013858015415885731, 10: 0.0009767965383466976, 11: 0.0005578842679857202, 12: 0.00040798944691892693, 13: 0.0002452876695346507, 14: 0.00016157009004035805, 15: 0.00011596175529226758, 16: 0.00010405215500371109, 17: 8.120153344768683e-05, 18: 6.366105174451738e-05, 19: 4.214207449366168e-05, 20: 6.994411538254441e-05, 21: 4.1953757539315304e-05, 22: 4.369942067773079e-05, 23: 2.345900364548555e-05, 24: 2.3179991772365096e-05, 25: 2.242760476990983e-05, 26: 1.6492788459643106e-05, 27: 1.1119828361547062e-05, 28: 1.230437310285321e-05, 29: 1.4508593023529762e-05, 30: 1.1231387929262885e-05, 31: 1.154593979852995e-05, 32: 7.619135224317868e-06, 33: 8.856621052313268e-06, 34: 6.12571600808198e-06, 35: 2.6896876537473523e-06, 36: 7.334077049329426e-06, 37: 3.850785002642871e-06, 38: 5.320019011406792e-06, 39: 4.9941123534650825e-06, 40: 3.82129130836425e-06, 41: 4.603172005098138e-06, 42: 2.3221946977910374e-06, 43: 2.654147657600739e-06, 44: 2.7014113499526673e-06, 45: 2.292701003512416e-06, 46: 1.919530653218778e-06, 47: 2.2809773073071013e-06, 48: 3.79784391595362e-06, 49: 1.5403140010571484e-06, 50: 1.8900369589401567e-06, 51: 2.3104710015857223e-06, 52: 2.25148361302848e-06, 53: 1.919530653218778e-06, 54: 2.6896876537473523e-06, 55: 3.792166521616297e-07, 56: 1.5285903048518336e-06, 57: 7.523870024552677e-07, 58: 1.931254349424093e-06, 59: 1.5520376972624629e-06, 60: 7.701570005285742e-07, 61: 1.5285903048518336e-06, 62: 7.701570005285742e-07, 63: 1.913484351350786e-06, 64: 1.931254349424093e-06, 65: 1.9429780456294075e-06, 66: 1.5637613934677777e-06, 67: 1.1610973488955187e-06, 68: 7.701570005285742e-07, 69: 3.045456913498353e-06, 70: 7.818806967338889e-07, 71: 3.9094034836694444e-07, 72: 1.5520376972624629e-06, 73: 3.9094034836694444e-07, 74: 3.068904305908982e-06, 75: 1.1610973488955187e-06, 77: 1.1610973488955187e-06, 78: 1.5520376972624629e-06, 79: 1.5342676991891563e-06, 80: 1.883990657072165e-06, 83: 7.701570005285742e-07, 84: 1.9429780456294075e-06, 85: 7.818806967338889e-07, 86: 3.9094034836694444e-07, 87: 3.792166521616297e-07, 88: 1.1493736526902038e-06, 89: 3.9094034836694444e-07, 90: 3.9094034836694444e-07, 91: 1.5520376972624629e-06, 92: 7.701570005285742e-07, 93: 1.1316036546168975e-06}
fontPath = "/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-R.ttf"
font_axis = fm.FontProperties(fname=fontPath, size=24)

fontPath = "/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-R.ttf"
font_legend = fm.FontProperties(fname=fontPath, size=18)


print("BITTI BITTIBITTIBITTIBITTIBITTIBITTIBITTIBITTIBITTIBITTI")
params = {
   'text.usetex': False,
    'legend.fontsize': 20,
   'figure.figsize': [40, 400]
   }
matplotlib.rcParams.update(params)


print(gap_dict)

lists = sorted(gap_dict.items()) # sorted by key, return a list of tuples

x, y = zip(*lists) # unpack a list of pairs into two tuples
plt.tick_params(axis='both', which='major', labelsize=12)

plt.plot(x, y,marker='x' ,markersize=7,linewidth=1)

# ax.bar(list(gap_dict.keys()), gap_dict.values(), color='g')
ax.set_xlabel('Gaps',fontproperties=font_axis)
ax.set_ylabel('Freqs',fontproperties=font_axis)
axes = plt.gca()
plt.savefig("f1_score_us_vs_others7.pdf",dpi=1200,bbox_inches='tight')
# axes.set_xlim([0,10])

plt.show()



import numpy as np
import matplotlib.pyplot as plt


whole_level=[[[1.4791626930236816, 2.922565460205078, 4.127495527267456, 5.151721000671387, 6.188038110733032, 7.547062158584595, 8.915035247802734, 10.3853919506073, 12.063600063323975, 13.87957763671875, 15.742120742797852, 17.55774474143982, 19.45051383972168, 21.38104796409607, 23.355525016784668, 25.352903127670288, 27.035041332244873, 28.7693452835083, 30.522358894348145, 32.339083433151245, 34.173516273498535, 36.040310859680176, 37.972941160202026, 39.98391628265381, 41.97049689292908, 44.02607011795044, 46.11435675621033, 48.26174712181091, 50.45946764945984, 52.75143551826477, 55.06513023376465, 57.44625687599182, 59.84511470794678, 62.32375741004944, 64.8257429599762, 67.40132117271423, 69.86229157447815, 72.31605839729309, 74.81465435028076, 77.3852789402008, 80.01177024841309, 82.7176718711853, 85.46399474143982, 88.18222141265869, 90.95874333381653, 93.76520442962646, 96.62851691246033, 99.60611510276794, 102.65499329566956, 105.71773099899292], [1128, 2293, 3422, 4527, 5620, 6702, 7773, 8848, 9914, 11071, 12227, 13401, 14589, 15713, 16865, 18033, 19220, 20411, 21544, 22701, 23878, 25027, 26189, 27395, 28541, 29728, 30884, 32039, 33182, 34408, 35559, 36769, 37899, 39065, 40200, 41348, 42426, 43457, 44510, 45555, 46639, 47778, 48899, 49989, 51005, 52033, 53063, 54197, 55361, 56551], 778.24], [[2.4264440536499023, 4.624744892120361, 6.688787221908569, 8.756706237792969, 11.311923742294312, 14.050066947937012, 16.893012762069702, 19.792048931121826, 22.424362182617188, 25.18909502029419, 28.01226496696472, 30.887826919555664, 33.79405355453491, 36.807504415512085, 39.92231798171997, 43.10551333427429, 46.33091711997986, 49.60150694847107, 52.67675232887268, 55.838977336883545, 59.17051982879639, 62.53191566467285, 66.00289750099182, 69.50040793418884, 73.16018342971802], [2293, 4527, 6702, 8848, 11071, 13401, 15713, 18033, 20411, 22701, 25027, 27395, 29728, 32039, 34408, 36769, 39065, 41348, 43457, 45555, 47778, 49989, 52033, 54197, 56551], 1556.48], [[3.3362295627593994, 5.999776124954224, 8.924882650375366, 12.49301528930664, 16.215214014053345, 19.81378197669983, 23.420748710632324, 27.175048112869263, 30.977367639541626, 35.07087206840515, 39.13597846031189, 43.28608155250549, 47.08019208908081, 50.99871516227722, 55.070359230041504, 59.21632766723633, 62.842753410339355], [3422, 6702, 9914, 13401, 16865, 20411, 23878, 27395, 30884, 34408, 37899, 41348, 44510, 47778, 51005, 54197, 56551], 2334.72], [[4.01036524772644, 7.495382308959961, 12.05778431892395, 16.88463521003723, 21.41413927078247, 26.0799298286438, 30.87270188331604, 36.09542155265808, 41.158570766448975, 45.75948429107666, 50.532116174697876, 55.405988454818726, 59.12239623069763], [4527, 8848, 13401, 18033, 22701, 27395, 32039, 36769, 41348, 45555, 49989, 54197, 56551], 3112.96], [[4.8532421588897705, 9.271301746368408, 14.708355188369751, 19.979982137680054, 25.549829244613647, 31.33517289161682, 37.42431592941284, 42.94508457183838, 48.50568103790283, 54.373106956481934], [5620, 11071, 16865, 22701, 28541, 34408, 40200, 45555, 51005, 56551], 3891.2000000000003], [[5.34115195274353, 10.963825464248657, 17.87339949607849, 24.320383548736572, 31.151606559753418, 38.1789391040802, 44.32989549636841, 50.744629859924316, 54.398051261901855], [6702, 13401, 20411, 27395, 34408, 41348, 47778, 54197, 56551], 4669.44], [[6.038430213928223, 13.111303329467773, 20.35964608192444, 27.820568799972534, 35.63240957260132, 42.6687285900116, 49.93654656410217, 52.777915477752686], [7773, 15713, 23878, 32039, 40200, 47778, 55361, 56551], 5447.68], [[6.645668029785156, 14.693978786468506, 22.98737359046936, 31.712566137313843, 39.87076711654663, 47.835517168045044, 51.48680567741394], [8848, 18033, 27395, 36769, 45555, 54197, 56551], 6225.92], [[7.5037500858306885, 16.65342926979065, 25.870575189590454, 35.67271947860718, 44.368366718292236, 50.352731466293335], [9914, 20411, 30884, 41348, 51005, 56551], 7004.16], [[8.53691291809082, 18.81873059272766, 29.31077814102173, 39.539058685302734, 49.38302993774414], [11071, 22701, 34408, 45555, 56551], 7782.400000000001], [[9.457143783569336, 20.324692249298096, 31.877734422683716, 42.472596883773804, 49.34407949447632], [12227, 25027, 37899, 49989, 56551], 8560.64], [[10.404179573059082, 22.35063934326172, 34.97418737411499, 46.05299234390259, 49.820515632629395], [13401, 27395, 41348, 54197, 56551], 9338.88], [[11.575916528701782, 24.64207911491394, 37.72944974899292, 48.26892852783203], [14589, 29728, 44510, 56551], 10117.12], [[12.433130502700806, 26.51698637008667, 40.188709020614624, 48.54883098602295], [15713, 32039, 47778, 56551], 10895.36], [[13.372919797897339, 28.40753984451294, 42.87235379219055, 48.940415382385254], [16865, 34408, 51005, 56551], 11673.6], [[14.278740167617798, 30.44994831085205, 45.2782142162323, 49.06997537612915], [18033, 36769, 54197, 56551], 12451.84], [[15.24789023399353, 32.42612290382385, 47.09985542297363], [19220, 39065, 56551], 13230.080000000002], [[16.419081449508667, 34.626468896865845, 47.526333808898926], [20411, 41348, 56551], 14008.32], [[17.220356702804565, 36.01654839515686, 47.308773040771484], [21544, 43457, 56551], 14786.56], [[18.35365581512451, 38.056461334228516, 48.01467561721802], [22701, 45555, 56551], 15564.800000000001], [[19.150777578353882, 39.27609038352966, 47.71262502670288], [23878, 47778, 56551], 16343.039999999999], [[20.04486894607544, 41.050811767578125, 48.12654781341553], [25027, 49989, 56551], 17121.28], [[21.27140784263611, 42.861435413360596, 48.30723309516907], [26189, 52033, 56551], 17899.52], [[21.683687448501587, 44.038442611694336, 47.99949884414673], [27395, 54197, 56551], 18677.76]]

seen_tweets=range(1200,56551,5000)
modified_whole_level=[]
batch_size_recorder=[]
batch_size_whole_level=[]



tweet_to_sentence = np.polyfit([778,1556,2334,39000],[1128,2293,3422,56551],1)
tweet_to_sentence = np.poly1d(tweet_to_sentence) 
for row in whole_level:
    exec_time=row[0]
    no_tweets_seen=row[1]
    batch_size=row[2]

    batch_size=tweet_to_sentence(batch_size)
    fit = np.polyfit(no_tweets_seen,exec_time,1)
    fit_fn = np.poly1d(fit) 

    exec_time_holder=[]
    batch_size_recorder=[]
    for seen_tweet in seen_tweets:
        print(batch_size,seen_tweet)
        if(seen_tweet>=batch_size):
            exec_time_holder.append(fit_fn(seen_tweet)+5.3)
            # print(fit_fn(seen_tweet)+5.3)
            batch_size_recorder.append(batch_size)

        else:
            exec_time_holder.append(-99)
            batch_size_recorder.append(-99)

    print('***************************************')

    # print(exec_time_holder)
    modified_whole_level.append(exec_time_holder)
    batch_size_whole_level.append(batch_size_recorder)

whole_level_transposed=list(map(list, zip(*modified_whole_level)))
# whole_level_transposed[0][0]=4  

batch_size_whole_level=list(map(list, zip(*batch_size_whole_level)))


whole_level_transposed_filtered=[]
for i in whole_level_transposed:
    i = [x for x in i if x != -99]
    print(i)
    whole_level_transposed_filtered.append(i)


# for i in batch_size_whole_level:
#     print(i)

batch_size_recorder_filtered=[]
for i in batch_size_whole_level:
    print(i)
    i = [x for x in i if x != -99]
    batch_size_recorder_filtered.append(i)


for idx,level in enumerate(whole_level_transposed_filtered):

    execution_time_list=level
    # tweets_been_processed_list=level[1]

    plt.plot( batch_size_recorder_filtered[idx],execution_time_list ,marker='o' , label=seen_tweets[idx],alpha=0.5)

    plt.ylim(3, 130)

    plt.xlabel('Batch Sizes')
    plt.ylabel('Execution Time')
    plt.grid(True)
    plt.legend(loc='upper right')
    plt.savefig("Execution-Time-vs-Batch-Size.png")

plt.show()









